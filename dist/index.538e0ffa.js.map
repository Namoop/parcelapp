{"mappings":"kpBAsBA,IAAuBA,EACDC,mFArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,+FCAlD,MAAMC,EAAMC,SAASC,cAAc,UAC1CF,EAAIG,cAAgB,WACnB,OAAO,GAGRH,EAAII,MAAMC,OAAS,oBACZ,MAAMC,EAAMN,EAAIO,WAAW,MAmB3B,MAAMC,EAAO,CACnBC,MAAQC,GAAe,IAAIC,SAASC,GAAYC,WAAWD,EAASF,KACpEI,GAAEC,eAAkBC,EAAcC,EAAcC,GAC/C,OAAQD,GACP,IAAK,IACL,IAAK,UACJD,GAAQ,GAET,IAAK,KACL,IAAK,eACJ,cAIAA,GAAQ,UAEJG,KAAKV,MAAMO,GACjBE,MAIIE,EAAU,GAchB,IAAIC,EAAsBC,EAb1BtB,EAAIuB,UAAYvB,EAAIwB,QAAU,SAAUC,GACnB,GAAhBA,EAAEC,IAAIlC,SACT4B,EACCK,EAAEC,IAAIC,eAAiBF,EAAEC,IACtBD,EAAEC,IAAIE,cACNH,EAAEC,IAAIC,eACN,GACLP,EAAGK,EAAEC,KAAiB,WAAVD,EAAEI,KAAoBT,EAAGK,EAAEC,MAAQI,KAAKC,MAAQ,GAO7D/B,EAAIgC,YAAeP,IAChBJ,EAAcC,GAAgB,CAACG,EAAEQ,QAASR,EAAES,SAC/ClC,EAAImC,YAAeV,IAChBJ,EAAcC,GAAgB,CAC/BG,EAAEW,QAAQ,GAAGH,QACbR,EAAEW,QAAQ,GAAGF,SAMW,MAAKG,EAAA,EAAE,GAAM,GACvC,GAEArC,EAACsC,UAAA,SAAAb,GACDY,EAAAZ,EAAAc,SAAI,GAEJvC,EAACwC,WAAA,SAAAf,GACDY,EAAA,IAAG,GAEFrC,EAA2DyC,YAAA,SAAAhB,GAC3DY,EAAAZ,EAAAc,SAAA,KAEoDG,aAAA,SAAAjB,MAAsBH,GAAA,CAACG,EAAAW,QAAA,GAAAH,QAC3ER,EAAAW,QAAA,GAAAF,SAGEG,EAAA,IAAA,SCxFUM,cAUAC,GAVNzB,KAEN0B,EAAI,EAFE1B,KAGN2B,EAAI,EAHE3B,KAIN4B,UAAY,EAJN5B,KAKN6B,MAAQ,IALF7B,KAMN8B,OAAS,IANH9B,KAON+B,MAAQ,IAPF/B,KAQN1B,GAAKqC,KAAKC,MARJZ,KASNgC,WAAY,EAEXhC,KAAKyB,IAAMA,EAEXQ,QAAQjC,KAAK1B,IAAM0B,UASnB0B,EAAAC,GAOA,OANA3B,KAAA0B,EAAAA,EAIE1B,KAAA2B,EAAAA,EAEE3B,YAEJ6B,EAAWC,eACX,IAAAA,EAAA9B,KAAA8B,OAAA9B,KAAA6B,MAAAA,GAKE7B,KAAA6B,MAAA7B,KAAA8B,QAAA,GAGDA,GAEA9B,iBAEwB0B,EAAAC,EAAAO,GACzB,KAAAC,KAAAC,MAAAV,EAAA1B,KAAA0B,EAAAC,EAAA3B,KAAA2B,GAAA,GAEO3B,KAAI0B,IAAAA,EAAA1B,KAAA0B,IAAA,GAAAQ,GAAClC,KAAA2B,IAAAA,EAAA3B,KAAA2B,IAAA,GAAAO,SACCG,WACdrC,KAAU0B,EAAC1B,KAAA2B,GAAA,CAACD,EACLC,GAEoBW,8DAYrBC,8EChEPC,EAAc,IAAAC,IAAuBhE,EAAA,SAAAgB,QAA6C,SAAOiD,OAAAC,KAAAC,KAAGC,WCA5F,MAAMC,EAAmBhE,SAASiE,eAAe,OACjD,IAAIC,EACJC,OAAgB,QAAI,GACpBA,OAAkB,UAAI,IAAIzD,SAAS0D,GAAOF,EAAeE,IAQzDJ,EAAIK,YAAYtE,GAChB,IAAIuE,EAAM,IAAIC,MACdD,EAAI3B,IAAM6B,EAAAd,GACV,IAAIe,EAAM,IAAI/B,EAAO4B,GAAKI,KAAK,IAAK,KAAKC,OAAO,KAEhDF,EAAIG,MAAM,IAAK,IAAK,IACpBrE,EAAKM,GAAG,GAAI,WAAS,KACpB4D,EAAIC,KAAK,IAAK,KAAKE,MAAM,IAAK,IAAK,OAGxB,kBF8CClC,oBAEVmC,EAAM7E,SAAQ8E,gBAAA,6BAAA,OACdC,EAAA/E,SAAA8E,gBAAA,6BAAA,QACDE,EAAQD,EAAM,CACbnC,EAAA,EACAC,EAAA,EACDoC,GAAQ,GACJC,GAAA,GAE8BnC,MAAA,IAElCC,OAAS,IACTmC,KAAA,aAGcN,EAAU,CACjBO,KAAM,gDEvDR,MAAMC,EACD,EADCA,GAEN,EAFMA,GAGJlB,OAAOmB,WAAa,IAAM,aAM1BC,QAERC,EAAIC,KAAK5D,KAAKC,OACd9B,SAASiE,eAAe,MAAMyB,UAAS,QAAWF,EAAIjG,SAC/CsC,KAAKC,MAAQ0D,EAAI,GAAK,KAAKA,EAAIG,QACtCtF,EAAIuF,UAAU,EAAG,EAAG7F,EAAIgD,MAAOhD,EAAIiD,QACnCjD,EAAIgD,MAAQ,IAAMsC,EAClBtF,EAAIiD,OAAS,IAAMqC,aHpCnB,IAAK,IAAI/F,KAAKD,OAAOwG,OAAO1C,SAC3B9C,EAAIyF,OACJzF,EAAI0F,YAAczG,EAAE2D,MAAQ,IAC5B5C,EAAI2F,UAAU1G,EAAEsD,EAAGtD,EAAEuD,GACrBxC,EAAI4F,OAAQ3G,EAAEwD,UAAYO,KAAK6C,GAAM,KACrC7F,EAAI8F,UACH7G,EAAEqD,IACF,EAAMrD,EAAEqD,IAAII,MAAQ,EAAKzD,EAAEyD,MAAS,IACpC,EAAMzD,EAAEqD,IAAIK,OAAS,EAAK1D,EAAE0D,OAAU,IACrC1D,EAAEqD,IAAII,MAAQzD,EAAEyD,MAAS,IACzBzD,EAAEqD,IAAIK,OAAS1D,EAAE0D,OAAU,KAE7B3C,EAAI+F,UG0BLC,GACAnC,IACAX,UAAY,IAAI7C,SAAS0D,GAAOF,EAAeE,IAC1CiB,IACwB,GAAxBA,EAA2BlB,OAAOmC,sBAAsBf,GAE3D3E,WACCuD,OAAOmC,sBACPjB,EACAE,IAIJ,IACIC,EAAgB,GAEpBe,QAAQC,yBAGPjB,IAEDkB","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-ab901f770580e5ed.js","src/setup.ts","src/assets/classes/sprite.class.ts","node_modules/@parcel/runtime-js/lib/runtime-529a79456597ed16.js","src/main.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aT88m\\\":\\\"index.538e0ffa.js\\\",\\\"jdM0I\\\":\\\"bob.3fcf58e0.png\\\"}\"));","export const cnv = document.createElement(\"canvas\");\r\ncnv.oncontextmenu = function () {\r\n\treturn false;\r\n};\r\n//const scale: number = (window.innerWidth - 20) / 800;\r\ncnv.style.border = \"3px solid #000000\";\r\nexport const pen = cnv.getContext(\"2d\");\r\n\r\nexport function draw(): void {\r\n\tfor (let i of Object.values(sprites)) {\r\n\t\tpen.save();\r\n\t\tpen.globalAlpha = i.alpha / 100;\r\n\t\tpen.translate(i.x, i.y);\r\n\t\tpen.rotate((i.direction * Math.PI) / 180);\r\n\t\tpen.drawImage(\r\n\t\t\ti.src,\r\n\t\t\t0 - ((i.src.width / 2) * i.width) / 100,\r\n\t\t\t0 - ((i.src.height / 2) * i.height) / 100,\r\n\t\t\t(i.src.width * i.width) / 100,\r\n\t\t\t(i.src.height * i.height) / 100\r\n\t\t);\r\n\t\tpen.restore();\r\n\t}\r\n}\r\n\r\nexport const Time = {\r\n\tsleep: (ms: number) => new Promise((resolve) => setTimeout(resolve, ms)),\r\n\tin: async function (time: number, unit: string, callback: Function) {\r\n\t\tswitch (unit) {\r\n\t\t\tcase \"m\":\r\n\t\t\tcase \"minutes\":\r\n\t\t\t\ttime *= 60;\r\n\t\t\t//break;\r\n\t\t\tcase \"ms\":\r\n\t\t\tcase \"milliseconds\":\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"s\":\r\n\t\t\tcase \"seconds\":\r\n\t\t\tdefault:\r\n\t\t\t\ttime *= 1000;\r\n\t\t}\r\n\t\tawait this.sleep(time);\r\n\t\tcallback();\r\n\t},\r\n};\r\n\r\nconst kp: any = {};\r\ncnv.onkeydown = cnv.onkeyup = function (e) {\r\n\tif (e.key.length == 1)\r\n\t\tkp[\r\n\t\t\te.key.toLowerCase() == e.key\r\n\t\t\t\t? e.key.toUpperCase()\r\n\t\t\t\t: e.key.toLowerCase()\r\n\t\t] = 0;\r\n\tkp[e.key] = e.type == \"keydown\" ? kp[e.key] || Date.now() : 0;\r\n\t//const event = `key ${e.key} ${e.type.slice(3)}`;\r\n\t//me.onEvent?.[event]?.(event, Date.now() - kp[e.key]);\r\n\t//if (me.logEvents) console.log(event);\r\n};\r\n\r\nlet windowMouseX: number, windowMouseY: number;\r\ncnv.onmousemove = (e) =>\r\n\t([windowMouseX, windowMouseY] = [e.clientX, e.clientY]);\r\ncnv.ontouchmove = (e) =>\r\n\t([windowMouseX, windowMouseY] = [\r\n\t\te.touches[0].clientX,\r\n\t\te.touches[0].clientY,\r\n\t]); //tap and place?\r\n\r\n/**Returns current mouse state [left, middle, right]\r\n *\r\n */\r\nconst mouseDown = [false, false, false];\r\ncnv.onmouseup = function (e) {\r\n\tmouseDown[e.button] = false;\r\n};\r\ncnv.ontouchend = function (e) {\r\n\tmouseDown[0] = false;\r\n};\r\ncnv.onmousedown = function (e) {\r\n\tmouseDown[e.button] = true;\r\n\t//for (let i of me.onclicks) if (e.button == i[1]) i[0](e);\r\n};\r\ncnv.ontouchstart = function (e) {\r\n\t[windowMouseX, windowMouseY] = [e.touches[0].clientX, e.touches[0].clientY];\r\n\tmouseDown[0] = true;\r\n\t//for (let i of me.onclicks) if (e.button == i[1]) i[0](e);\r\n};\r\n//}\r\n","export class Sprite {\r\n\tsrc: any;\r\n\tx = 0;\r\n\ty = 0;\r\n\tdirection = 0;\r\n\twidth = 100;\r\n\theight = 100;\r\n\talpha = 100;\r\n\tid = Date.now();\r\n\tdraggable = false;\r\n\tconstructor(src: CanvasImageSource) {\r\n\t\tthis.src = src;\r\n\r\n\t\tsprites[this.id] = this;\r\n\t}\r\n\t/** Move the position of the sprite\r\n\t * @param {number} x Target position\r\n\t * @param {number} y\r\n\t */\r\n\tmove(x: number, y: number): Sprite {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\treturn this;\r\n\t}\r\n\t/** Change the size (percentage) of the sprite\r\n\t * @param {number} width\r\n\t * @param {number} height | Optional - If left blank will set to same as height\r\n\t */\r\n\tresize(width: number, height?: number): Sprite {\r\n\t\tif (typeof height == \"undefined\") this.height = this.width = width;\r\n\t\telse [this.width, this.height] = [width, height];\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Asynchronously glide to a location\r\n\t * @param {number} x Target position\r\n\t * @param {number} y\r\n\t */\r\n\tasync glide(x: number, y: number, speed) {\r\n\t\twhile (Math.hypot(x - this.x, y - this.y) > 1) {\r\n\t\t\tthis.x += (x - this.x) / (speed * 10);\r\n\t\t\tthis.y += (y - this.y) / (speed * 10);\r\n\t\t\tawait nextframe;\r\n\t\t}\r\n\t\t[this.x, this.y] = [x, y];\r\n\t}\r\n\r\n\ttouching() {} //colliding with\r\n\ttouchingAll() {} //colliding with type | sprite.touchingAll(Dot) -> [dot1, dot2]\r\n\tonclick() {} //\r\n\tonhover() {} //\r\n\r\n\tpointTowards(obj: Sprite) {} //set direction towards param\r\n}\r\n\r\nexport class Button extends Sprite {\r\n\tconstructor() {\r\n\t\tlet svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n\t\tlet rect = document.createElementNS(\r\n\t\t\t\"http://www.w3.org/2000/svg\",\r\n\t\t\t\"rect\"\r\n\t\t);\r\n\t\tsetatts(rect, {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\trx: 10,\r\n\t\t\try: 10,\r\n\t\t\twidth: 100,\r\n\t\t\theight: 100,\r\n\t\t\tfill: \"ff0055\",\r\n\t\t});\r\n\t\tsetatts(svg, {\r\n\t\t\thref: \"\",\r\n\t\t});\r\n\t\tconsole.log(rect);\r\n\t\tsvg.appendChild(rect);\r\n\r\n\t\t//let bob = new SVGImageElement();\r\n\r\n\t\tsuper(svg);\r\n\t}\r\n}\r\n\r\nfunction setatts(el: any, vals: object) {\r\n\tfor (let i of Object.keys(vals)) el.setAttribute(i, vals[i]);\r\n}\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jdM0I\")).toString();","const app: HTMLElement = document.getElementById(\"app\");\r\nlet resolveframe: Function;\r\nwindow[\"sprites\"] = {}; //global variable\r\nwindow[\"nextframe\"] = new Promise((r) => (resolveframe = r));\r\n\r\n//import toml from \"./assets/config/maps.toml\";\r\nimport { cnv, draw, pen, Time } from \"./setup\";\r\nimport { Button, Sprite } from \"./assets/classes/sprite.class\";\r\nimport Bob from \"./assets/images/bob.png\";\r\n//console.log(toml);\r\n\r\napp.appendChild(cnv);\r\nlet img = new Image()\r\nimg.src = Bob\r\nlet bob = new Sprite(img).move(100, 100).resize(200);\r\n\r\nbob.glide(600, 100, 10);\r\nTime.in(11, \"seconds\", () => {\r\n\tbob.move(100, 100).glide(350, 100, 10);\r\n});\r\n\r\nlet steve = new Button()\r\n\r\n/**\r\n * Options that can change how the game runs\r\n * - Gamespeed: Time between ticks (milliseconds)\r\n * - Stop: Set to True to kill the loop\r\n * - Scale: How large the canvas will be\r\n */\r\nexport const runOptions = {\r\n\tgamespeed: 0,\r\n\tstop: false,\r\n\tscale: (window.innerWidth - 20) / 800,\r\n};\r\n\r\nfunction init() {}\r\nfunction run() {}\r\n\r\nfunction loop(): void {\r\n\tframe++;\r\n\tfps.push(Date.now());\r\n\tdocument.getElementById(\"dg\").innerText = `fps: ${fps.length}`;\r\n\twhile (Date.now() - fps[0] > 980) fps.shift();\r\n\tpen.clearRect(0, 0, cnv.width, cnv.height);\r\n\tcnv.width = 800 * runOptions.scale;\r\n\tcnv.height = 400 * runOptions.scale;\r\n\trun();\r\n\tdraw();\r\n\tresolveframe();\r\n\tnextframe = new Promise((r) => (resolveframe = r));\r\n\tif (!runOptions.stop) {\r\n\t\tif (runOptions.gamespeed == 0) window.requestAnimationFrame(loop);\r\n\t\telse\r\n\t\t\tsetTimeout(\r\n\t\t\t\twindow.requestAnimationFrame,\r\n\t\t\t\trunOptions.gamespeed,\r\n\t\t\t\tloop\r\n\t\t\t);\r\n\t}\r\n}\r\nlet frame = 0;\r\nlet fps: number[] = [];\r\n//reminder: set config as global\r\nconsole.clear();\r\nasync function load() {\r\n\tinit();\r\n\tloop();\r\n}\r\nload();\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$411221efd52537ac$export$8ae6e0ae57092510","document","createElement","oncontextmenu","style","border","$411221efd52537ac$export$264143ed1afc82a3","getContext","$411221efd52537ac$export$680ea196effce5f","sleep","ms","Promise","resolve","setTimeout","in","async","time","unit","callback","this","$411221efd52537ac$var$kp","$411221efd52537ac$var$windowMouseX","$411221efd52537ac$var$windowMouseY","onkeydown","onkeyup","e","key","toLowerCase","toUpperCase","type","Date","now","onmousemove","clientX","clientY","ontouchmove","touches","$411221efd52537ac$var$mouseDown","onmouseup","button","ontouchend","onmousedown","ontouchstart","$75cd394e6a9de6a4$export$3075603db8e6204c","src","x","y","direction","width","height","alpha","draggable","sprites","speed","Math","hypot","nextframe","touching","obj","$cbed75473854ddfc$exports","URL","import","meta","url","toString","$ad2bcec7a0192558$var$app","getElementById","$ad2bcec7a0192558$var$resolveframe","window","r","appendChild","$ad2bcec7a0192558$var$img","Image","$parcel$interopDefault","$ad2bcec7a0192558$var$bob","move","resize","glide","svg","createElementNS","rect","$75cd394e6a9de6a4$var$setatts","rx","ry","fill","href","$ad2bcec7a0192558$export$fd899f5e5ffd3e59","innerWidth","$ad2bcec7a0192558$var$loop","$ad2bcec7a0192558$var$fps","push","innerText","shift","clearRect","values","save","globalAlpha","translate","rotate","PI","drawImage","restore","$411221efd52537ac$export$e529deb2bfd496dc","requestAnimationFrame","console","clear","$ad2bcec7a0192558$var$load"],"version":3,"file":"index.538e0ffa.js.map"}